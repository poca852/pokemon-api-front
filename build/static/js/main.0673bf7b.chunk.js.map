{"version":3,"sources":["types/types.js","reducers/pokemonReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","actions/pokemons.js","helpers/calmelCase.js","components/card-pokemon/CardPokemon.js","components/filtros/PorAtaque.js","components/filtros/PorNombre.js","components/filtros/PorOrigen.js","components/filtros/PorTypo.js","components/filtros/Refresh.js","components/loading/Loading.js","components/paginacion/Paginacion.js","components/search/Search.js","ui/NavBar.js","pages/home/HomeScreen.js","pages/pokemon/Pokemon.js","assets/Pokemon-logo.png","assets/pikachu-circle.png","pages/welcome/WelcomeScreen.js","pages/nuevoPokemon/NuevoPokemon.js","helpers/validar-form.js","router/AppRouter.js","App.js","reportWebVitals.js","index.js"],"names":["types","loadAllPokemons","getTypes","searchPokemon","typeSearchPokemon","searchPokemonById","clearActivePokemon","abcOrderPokemon","attackOrderPokemon","apiOrDbCreatedPokemon","createPokemon","refreshAllPokemon","uiSetLoading","uiRemoveLoading","uiSetMsgError","uiRemoveMsgError","uiSetMsg","uiRemoveMsg","initialState","allPokemons","filterPokemons","typesPokemons","activePokemon","loading","msgError","msg","rootReducer","ui","state","action","type","payload","pokemons","filter","pokemon","map","name","includes","sort","a","b","attack","pokemonOrder","db","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","configureStore","reducer","dispatch","fetch","resp","json","setLoading","removeLoading","setMsgError","removeMsgError","setMsg","removeMsg","toCamelCase","string","stringArray","split","restoPalabra","slice","length","join","primeraLetra","toUpperCase","CardPokemon","img","id","to","className","src","alt","PorAtaque","useDispatch","filterByAttack","target","value","onChange","e","PorNombre","filterByName","PorOrigen","filterByOrigin","PorTypo","useSelector","filterBytype","Refresh","onClick","Loading","Paginacion","pagina","setPagina","maximo","Search","useState","input","setInput","onSubmit","preventDefault","pokemonResp","ok","pokemonByName","autoComplete","placeholder","NavBar","HomeScreen","useEffect","pokemonsInLocalStorage","JSON","parse","localStorage","getItem","data","setItem","stringify","Math","ceil","poke","Pokemon","useParams","history","useHistory","max","hp","defense","speed","height","weight","goBack","WelcomeScreen","logo","pikachu","NuevoPokemon","errors","setErrors","handleInputChange","Number","formInvalid","results","valido","validation","method","headers","body","clear","handleSelect","hidden","typeP","find","typePoke","pokemonType","AppRouter","exact","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0673bf7b.chunk.js","sourcesContent":["export const types = {\r\n   // eventos de pokemonReducer\r\n   loadAllPokemons: '[pokemon] cargar los pokemons',\r\n   getTypes: '[pokemon] cargar los typos de pokemons',\r\n   searchPokemon: '[pokemon] buscar un pokemon',\r\n   typeSearchPokemon: '[pokemon] filtrar por tipo',\r\n   searchPokemonById: '[pokemon] filtrar por id',\r\n   clearActivePokemon: '[pokemon] limpiar el active pokemon',\r\n   abcOrderPokemon: '[pokemon] ordenar los pokemons segund su nombre',\r\n   attackOrderPokemon: '[pokemon] ordernar segun su poder de ataque',\r\n   apiOrDbCreatedPokemon: '[pokemon] ordernar por tipo de creacion',\r\n   createPokemon: '[pokemon] crear un pokemon',\r\n   refreshAllPokemon: '[pokemon] refresh all pokemons',\r\n\r\n   uiSetLoading: '[ui] set loading',\r\n   uiRemoveLoading: '[ui] remove loading',\r\n   uiSetMsgError: '[ui] set msg error',\r\n   uiRemoveMsgError: '[ui] remove msg error',\r\n   uiSetMsg: '[ui] set msg',\r\n   uiRemoveMsg: '[ui] remove msg'\r\n};","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n   allPokemons: [],\r\n   filterPokemons: [],\r\n   typesPokemons: [],\r\n   activePokemon: {},\r\n};\r\n\r\nexport const pokemonReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case types.loadAllPokemons:\r\n         return {\r\n            ...state,\r\n            allPokemons: action.payload,\r\n            filterPokemons: action.payload,\r\n         }\r\n\r\n      case types.refreshAllPokemon: {\r\n         return {\r\n            ...state,\r\n            filterPokemons: state.allPokemons\r\n         }\r\n      }\r\n         \r\n      case types.getTypes: \r\n         return {\r\n            ...state,\r\n            typesPokemons: action.payload,\r\n         }\r\n\r\n      case types.searchPokemon:\r\n         return {\r\n            ...state,\r\n            filterPokemons: [action.payload],\r\n         }\r\n\r\n      case types.typeSearchPokemon:\r\n         return {\r\n            ...state,\r\n            filterPokemons: action.payload === 'all' \r\n               ? state.allPokemons \r\n               : state.allPokemons.filter(pokemon => pokemon.types.map(type => type.name).includes(action.payload))\r\n         }\r\n\r\n      case types.searchPokemonById:\r\n         return {\r\n            ...state,\r\n            activePokemon: action.payload,\r\n         }\r\n\r\n      case types.clearActivePokemon:\r\n         return {\r\n            ...state,\r\n            activePokemon: {},\r\n         }\r\n\r\n      case types.abcOrderPokemon: \r\n         let pokemons = [];\r\n         if(action.payload === 'asc'){\r\n            pokemons = state.allPokemons.sort((a,b) => {\r\n               if(a.name > b.name) return 1\r\n               if(b.name > a.name) return -1\r\n               return 0\r\n            })\r\n            return{\r\n               ...state,\r\n               filterPokemons: pokemons\r\n            }\r\n         }\r\n\r\n         if(action.payload === 'desc'){\r\n            pokemons = state.allPokemons.sort((a,b) => {\r\n               if(a.name > b.name) return -1\r\n               if(b.name > a.name) return 1\r\n               return 0\r\n            })\r\n            return {\r\n               ...state,\r\n               filterPokemons: pokemons\r\n            }\r\n         }\r\n\r\n         return {\r\n            ...state,\r\n            filterPokemons: state.allPokemons\r\n         }\r\n\r\n      case types.attackOrderPokemon:\r\n         return {\r\n            ...state,\r\n            filterPokemons: action.payload === 'debil'\r\n               ? state.allPokemons.sort((a, b) => {\r\n                  if(a.attack > b.attack) return 1\r\n                  if(b.attack > a.attack) return -1\r\n                  return 0\r\n               })\r\n               :state.allPokemons.sort((a, b) => {\r\n                  if(a.attack > b.attack) return -1;\r\n                  if(b.attack > a.attack) return 1\r\n                  return 0\r\n               }),\r\n         }\r\n\r\n         case types.apiOrDbCreatedPokemon:\r\n            let pokemonOrder = []\r\n            if(action.payload === 'api'){\r\n               pokemonOrder = state.allPokemons.filter(pokemon => !pokemon.db)\r\n            }else{\r\n               pokemonOrder = state.allPokemons.filter(pokemon => pokemon.db)\r\n            }\r\n            return{\r\n               ...state,\r\n               filterPokemons: pokemonOrder,\r\n            }\r\n\r\n         case types.createPokemon:\r\n            return{\r\n               ...state\r\n            }\r\n         \r\n      default:\r\n         return state;\r\n   };\r\n};","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   msgError: null,\r\n   msg: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n\r\n      case types.uiSetLoading:\r\n         return {\r\n            ...state,\r\n            loading: true\r\n         }\r\n\r\n      case types.uiRemoveLoading:\r\n         return {\r\n            ...state,\r\n            loading: false\r\n         }\r\n\r\n      case types.uiSetMsgError:\r\n         return {\r\n            ...state,\r\n            msgError: action.payload\r\n         }\r\n\r\n      case types.uiRemoveMsgError:\r\n         return {\r\n            ...state,\r\n            msgError: null\r\n         }\r\n\r\n      case types.uiSetMsg:\r\n         return {\r\n            ...state,\r\n            msg: action.payload\r\n         }\r\n\r\n      case types.uiRemoveMsg:\r\n         return {\r\n            ...state,\r\n            msg: null\r\n         }\r\n\r\n      default:\r\n         return state;\r\n   }\r\n}","import { pokemonReducer } from \"./pokemonReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\nexport const rootReducer = {\r\n   ui: uiReducer,\r\n   pokemons: pokemonReducer\r\n}","import { compose } from 'redux'\r\nimport { configureStore } from '@reduxjs/toolkit'\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst middleware = [thunk];\r\n\r\nexport const store = configureStore({\r\n   reducer: rootReducer,\r\n   middleware,\r\n   composeEnhancers\r\n})","import { types } from \"../types/types\";\r\n\r\nexport const getAllPokemons = () => {\r\n   return async(dispatch) => {\r\n      dispatch(setLoading())\r\n      const pokemonsInLocalStorage = JSON.parse(localStorage.getItem('pokemons'))\r\n      if(pokemonsInLocalStorage === null){\r\n         const resp = await fetch('http://167.99.208.143/api/pokemons');\r\n         const data = await resp.json();\r\n         localStorage.setItem('pokemons', JSON.stringify(data.allPokemons));\r\n         dispatch({type: types.loadAllPokemons, payload: data.allPokemons});\r\n      }else{\r\n         dispatch({type: types.loadAllPokemons, payload: pokemonsInLocalStorage});\r\n      }\r\n      dispatch(removeLoading())\r\n   }\r\n}\r\n\r\nexport const getTypes = () => {\r\n   return async(dispatch) => {\r\n      const resp = await fetch('http://167.99.208.143/api/pokemons/types');\r\n      const typesPokemons = await resp.json();\r\n      if(types){\r\n         dispatch({type: types.getTypes, payload: typesPokemons})\r\n      }\r\n   }\r\n}\r\n\r\nexport const searchPokemon = (pokemon) => {\r\n   return async(dispatch) => {\r\n      dispatch(setLoading())\r\n      dispatch(removeMsgError())\r\n      const resp = await fetch(`http://167.99.208.143/api/pokemons?name=${pokemon}`)\r\n      const pokemonResp = await resp.json(); \r\n      if(pokemonResp.ok){\r\n         dispatch({type: types.searchPokemon, payload: pokemonResp.pokemonByName})\r\n      }else{\r\n         dispatch(setMsgError(pokemonResp.msg))\r\n      }\r\n      dispatch(removeLoading())\r\n   }\r\n}\r\n\r\nexport const typeSearchPokemon = (type) => {\r\n   return (dispatch) => {\r\n      dispatch(setLoading())\r\n      dispatch(removeMsgError())\r\n      dispatch({type: types.typeSearchPokemon, payload: type})\r\n      dispatch(removeLoading())\r\n   }\r\n}\r\n\r\nexport const searchPokemonById = (id) => {\r\n   return async(dispatch) => {\r\n      dispatch(setLoading())\r\n      dispatch(removeMsgError())\r\n      const resp = await fetch(`http://167.99.208.143/api/pokemons/${id}`)\r\n      const pokemon = await resp.json()\r\n      if(pokemon.ok) {\r\n         dispatch({type: types.searchPokemonById, payload: pokemon.pokemon})\r\n      }else{\r\n         dispatch(setMsgError(pokemon.msg))\r\n      }\r\n      dispatch(removeLoading());\r\n   }\r\n}\r\n\r\nexport const clearActivePokemon = () => {\r\n   return (dispatch) => {\r\n      dispatch({type: types.clearActivePokemon})\r\n   }\r\n}\r\n\r\nexport const abcOrderPokemon = (payload) => {\r\n   return (dispatch) => {\r\n      dispatch(setLoading())\r\n      dispatch(removeMsgError())\r\n      dispatch({type: types.abcOrderPokemon, payload})\r\n      dispatch(removeLoading())\r\n   }\r\n}\r\n\r\nexport const attackOrderPokemon = (payload) => {\r\n   return (dispatch) => {\r\n      dispatch(setLoading())\r\n      dispatch(removeMsgError())\r\n      dispatch({type: types.attackOrderPokemon, payload})\r\n      dispatch(removeLoading())\r\n   }\r\n}\r\n\r\nexport const apiOrDbCreatedPokemon = (payload) => {\r\n   return (dispatch) => {\r\n      dispatch(setLoading())\r\n      dispatch(removeMsgError())\r\n      dispatch({type: types.apiOrDbCreatedPokemon, payload})\r\n      dispatch(removeLoading())\r\n   }\r\n}\r\n\r\nexport const createPokemon = (pokemon) => {\r\n   return async(dispatch) => {\r\n      dispatch(setLoading())\r\n      dispatch(removeMsgError())\r\n      dispatch(removeMsg())\r\n      const resp = await fetch(`http://167.99.208.143/api/pokemons`, {\r\n         method: 'POST',\r\n         headers: {\r\n            'Content-Type': 'application/json'\r\n         },\r\n         body: JSON.stringify(pokemon)\r\n      })\r\n      const data = await resp.json()\r\n      if(data.ok){\r\n         dispatch({type: types.createPokemon})\r\n         dispatch(setMsg('Pokemon Created'))\r\n      }else{\r\n         dispatch(setMsgError(data.msg))\r\n      }\r\n      dispatch(removeLoading())\r\n   }\r\n}\r\n\r\nexport const setLoading = () => ({\r\n   type: types.uiSetLoading\r\n})\r\n\r\nexport const removeLoading = () => ({\r\n   type: types.uiRemoveLoading\r\n})\r\n\r\nexport const setMsgError = (payload) => ({\r\n   type: types.uiSetMsgError,\r\n   payload\r\n})\r\nexport const removeMsgError = () => ({ type: types.uiRemoveMsgError })\r\n\r\nexport const setMsg = (payload) => {\r\n   return {\r\n      type: types.uiSetMsg,\r\n      payload\r\n   }\r\n}\r\n\r\nexport const removeMsg = () => ({type: types.uiRemoveMsg})\r\n\r\nexport const refreshAllPokemons = () => {\r\n   return (dispatch) => {\r\n      dispatch(removeLoading())\r\n      dispatch(removeMsg())\r\n      dispatch(removeMsgError())\r\n      dispatch({type: types.refreshAllPokemon})\r\n   }\r\n}","export const toCamelCase = (string) => {\r\n   let palabra = string;\r\n   let stringArray = palabra.split('');\r\n   let restoPalabra = stringArray.slice(1, stringArray.length).join('')   \r\n   let primeraLetra = stringArray[0].toUpperCase();\r\n   return `${primeraLetra}${restoPalabra}`;\r\n};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { toCamelCase } from '../../helpers/calmelCase';\r\nimport './CardPokemon.css';\r\n\r\nexport const CardPokemon = ({ name, img, types, id }) => {\r\n\r\n  return (\r\n    <Link to={`pokemon/${id}`}>\r\n      <div className='card-pokemon'>\r\n\r\n        <img src={img} alt={name} />\r\n        <h3>{toCamelCase(name)}</h3>\r\n        <p className='tipos'>\r\n          {\r\n            types.map(type => (\r\n              `${toCamelCase(type.name)} / `\r\n            ))\r\n          }\r\n        </p>\r\n      </div>\r\n    </Link>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { attackOrderPokemon } from '../../actions/pokemons';\r\nimport './filtros.css';\r\n\r\nexport const PorAtaque = () => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const filterByAttack = ({target}) => {\r\n    dispatch(attackOrderPokemon(target.value))\r\n  }\r\n\r\n  return (\r\n    <select onChange={e => filterByAttack(e)}>\r\n      <option>Attack</option>\r\n      <option value='poderoso'>+ Attack</option>\r\n      <option value='debil'>- Attack</option>\r\n    </select>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { abcOrderPokemon } from '../../actions/pokemons'\r\nimport './filtros.css';\r\n\r\nexport const PorNombre = () => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const filterByName = ({target}) => {\r\n    dispatch(abcOrderPokemon(target.value))\r\n  }\r\n\r\n  return (\r\n    <select onChange={e => filterByName(e)}>\r\n      <option>Name</option>\r\n      <option value='asc'>A - Z</option>\r\n      <option value='desc'>Z - A</option>\r\n    </select>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { apiOrDbCreatedPokemon } from '../../actions/pokemons';\r\nimport './filtros.css';\r\n\r\n\r\nexport const PorOrigen = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  \r\n  const filterByOrigin = ({target}) => {\r\n    dispatch(apiOrDbCreatedPokemon(target.value))\r\n  }\r\n\r\n  return (\r\n    <select onChange={e => filterByOrigin(e)}>\r\n      <option>Api o Db</option>\r\n      <option value='api'>Api</option>\r\n      <option value='db'>Db</option>\r\n    </select>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { typeSearchPokemon } from '../../actions/pokemons';\r\nimport './filtros.css';\r\n\r\nexport const PorTypo = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const { typesPokemons } = useSelector(state => state.pokemons);\r\n\r\n  const filterBytype = ({target}) => {\r\n    dispatch(typeSearchPokemon(target.value))\r\n  }\r\n\r\n  return (\r\n    <select onChange={e => filterBytype(e)}>\r\n      <option value='all'>All Types</option>\r\n      {\r\n        typesPokemons.map(type => (\r\n          <option value={type.name} key={type.id}>{type.name}</option>\r\n        ))\r\n      }\r\n    </select>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { refreshAllPokemons } from \"../../actions/pokemons\";\r\n\r\nexport const Refresh = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleRefresh = () => {\r\n    dispatch(refreshAllPokemons());\r\n  };\r\n\r\n   return (\r\n      <button onClick={handleRefresh}>\r\n         Refresh All\r\n      </button>\r\n   );\r\n};\r\n","import React from 'react';\r\nimport './Loading.css'\r\n\r\nexport const Loading = () => {\r\n  return (\r\n    <div className='spinner'></div>\r\n    \r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { removeLoading, setLoading } from '../../actions/pokemons';\r\nimport './Paginacion.css'\r\n\r\nexport const Paginacion = ({ pagina, setPagina, maximo }) => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const prev = () => {\r\n    dispatch(setLoading())\r\n    if(pagina > 1){\r\n      setPagina(pagina - 1)\r\n    }\r\n    dispatch(removeLoading())\r\n  }\r\n\r\n  const next = () => {\r\n    dispatch(setLoading())\r\n    if(pagina < maximo){\r\n      setPagina(pagina + 1)\r\n    }\r\n    dispatch(removeLoading())\r\n  }\r\n\r\n  return (\r\n    <div className='container-btn'>\r\n      <button className='btn-page' onClick={prev}>Prev</button>\r\n      <button className='btn-page' onClick={next}>Next</button>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { searchPokemon } from '../../actions/pokemons';\r\nimport './Search.css';\r\n\r\nexport const Search = () => {\r\n\r\n   const dispatch = useDispatch()\r\n   const [input, setInput] = useState('');\r\n\r\n   const inputChange = ({target}) => {\r\n      setInput(target.value)\r\n   } \r\n   \r\n   const resetInput = () => {\r\n      setInput('')\r\n   }\r\n   \r\n   const handleSearch = (e) => {\r\n      e.preventDefault();\r\n      if(input.length !== 0){\r\n         dispatch(searchPokemon(input))\r\n         resetInput()\r\n      }\r\n   }\r\n   return (\r\n      <form onSubmit={handleSearch} autoComplete='off'>\r\n         <input type='search'\r\n            placeholder='Buscar un pokemon'\r\n            name='input'\r\n            value={input}\r\n            onChange={inputChange}\r\n         />\r\n         <button>Search</button>\r\n      </form>\r\n   )\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Search } from '../components/search/Search';\r\nimport './navbar.css';\r\n\r\nexport const NavBar = () => {\r\n   return (\r\n      <nav>\r\n         <div className='menu'>\r\n            <NavLink to='/'>Exit</NavLink>\r\n            <NavLink to='/nuevo'>New Pokemon</NavLink>\r\n         </div>\r\n         <div className='search'>\r\n            <Search />\r\n         </div>\r\n      </nav>\r\n   )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAllPokemons, getTypes } from '../../actions/pokemons';\r\nimport { CardPokemon } from '../../components/card-pokemon/CardPokemon';\r\nimport { PorAtaque } from '../../components/filtros/PorAtaque';\r\nimport { PorNombre } from '../../components/filtros/PorNombre';\r\nimport { PorOrigen } from '../../components/filtros/PorOrigen';\r\nimport { PorTypo } from '../../components/filtros/PorTypo';\r\nimport { Refresh } from '../../components/filtros/Refresh';\r\nimport { Loading } from '../../components/loading/Loading';\r\nimport { Paginacion } from '../../components/paginacion/Paginacion';\r\nimport { NavBar } from '../../ui/NavBar';\r\nimport './home.css';\r\n\r\nexport const HomeScreen = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const [pagina, setPagina] = useState(1);\r\n  const { filterPokemons } = useSelector(state => state.pokemons);\r\n  const { loading, msgError } = useSelector(state => state.ui);\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllPokemons())\r\n    dispatch(getTypes())\r\n  }, [dispatch])\r\n\r\n  const maximo = Math.ceil(filterPokemons.length / 12)\r\n\r\n  const pokemonsFilter = () => {\r\n    const pokemonsFiltrados = filterPokemons.slice(\r\n      (pagina - 1) * 12,\r\n      (pagina - 1) * 12 + 12\r\n    );\r\n    return pokemonsFiltrados;\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={`home ${msgError && 'no-found'}`}>\r\n      <NavBar />\r\n      <div className='home__main'>\r\n        <div className='filtros'>\r\n          <div className='select'>\r\n            <PorTypo />\r\n            <PorNombre />\r\n            <PorAtaque />\r\n            <PorOrigen />\r\n            <Refresh />\r\n          </div>\r\n        </div>\r\n\r\n        {\r\n          loading\r\n            ? <Loading />\r\n            : <div className='grid-pokemons'>\r\n                {\r\n                  msgError \r\n                    ? <h1>{msgError}</h1>\r\n                    :\r\n                    pokemonsFilter()?.map(poke => (\r\n                      <CardPokemon key={poke.name} {...poke} />\r\n                    ))\r\n                }\r\n              </div>\r\n        }\r\n        {\r\n          (!loading && !msgError) && <Paginacion pagina={pagina} setPagina={setPagina} maximo={maximo} />\r\n        }\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { clearActivePokemon, searchPokemonById } from '../../actions/pokemons';\r\nimport './pokemon.css';\r\n\r\nexport const Pokemon = () => {\r\n   const { id } = useParams();\r\n   const dispatch = useDispatch();\r\n   const { activePokemon, loading } = useSelector(state => state.pokemons)\r\n\r\n   useEffect(() => {\r\n      dispatch(searchPokemonById(id));\r\n   }, [dispatch, id])\r\n\r\n   const history = useHistory();\r\n\r\n   const handleVolver = () => {\r\n      dispatch(clearActivePokemon())\r\n      history.goBack()\r\n   }\r\n\r\n   if (loading) {\r\n      return <h1>Cargando</h1>\r\n   }\r\n   return (\r\n      <div className='container'>\r\n         <div>\r\n            <div className='id'>\r\n               #{activePokemon.id}\r\n            </div>\r\n\r\n            <div className='title'>\r\n               <h1>{activePokemon.name}</h1>\r\n            </div>\r\n\r\n            <div className='img'>\r\n               <img src={activePokemon?.img} alt={activePokemon?.img} />\r\n            </div>\r\n\r\n            <div className='stats'>\r\n               <h3>Stats</h3>\r\n               <div className='container-stats'>\r\n                  <h3>Hp</h3>\r\n                  <progress max='250' value={activePokemon.hp}></progress>\r\n                  <p>{activePokemon.hp}</p>\r\n               </div>\r\n\r\n               <div className='container-stats'>\r\n                  <h3>Attack</h3>\r\n                  <progress max='250' value={activePokemon.attack}></progress>\r\n                  <p>{activePokemon.attack}</p>\r\n               </div>\r\n\r\n               <div className='container-stats'>\r\n                  <h3>Defense</h3>\r\n                  <progress max='250' value={activePokemon.defense}></progress>\r\n                  <p>{activePokemon.defense}</p>\r\n               </div>\r\n\r\n               <div className='container-stats'>\r\n                  <h3>Speed</h3>\r\n                  <progress max='250' value={activePokemon.speed}></progress>\r\n                  <p>{activePokemon.speed}</p>\r\n               </div>\r\n\r\n               <div className='container-stats'>\r\n                  <h3>Height</h3>\r\n                  <progress max='250' value={activePokemon.height}></progress>\r\n                  <p>{activePokemon.height} Cms</p>\r\n               </div>\r\n\r\n               <div className='container-stats'>\r\n                  <h3>Weight</h3>\r\n                  <progress max='250' value={activePokemon.weight}></progress>\r\n                  <p>{activePokemon.weight} Kg</p>\r\n               </div>\r\n            </div>\r\n\r\n            <button onClick={handleVolver}>Volver</button>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Pokemon-logo.380d8431.png\";","export default __webpack_public_path__ + \"static/media/pikachu-circle.bd93115f.png\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport logo from '../../assets/Pokemon-logo.png';\r\nimport pikachu from '../../assets/pikachu-circle.png';\r\nimport './welcome.css';\r\n\r\nexport const WelcomeScreen = () => {\r\n  return (\r\n    <div className='welcome__container'>\r\n      <div className='welcome__logo'>\r\n        <img src={logo} alt='logo de pokemon' />\r\n        <button>\r\n          <NavLink to={`/home`}>START</NavLink>\r\n        </button>\r\n      </div>\r\n      <div className='welcome__pikachu'>\r\n        <img src={pikachu} alt='pikachu' />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  createPokemon,\r\n  getTypes,\r\n  removeLoading,\r\n  removeMsg,\r\n} from \"../../actions/pokemons\";\r\nimport { Loading } from \"../../components/loading/Loading\";\r\nimport { validation } from \"../../helpers/validar-form\";\r\nimport \"./nuevoPokemon.css\";\r\nexport const NuevoPokemon = () => {\r\n  const { typesPokemons } = useSelector((state) => state.pokemons);\r\n  const { msgError, msg, loading } = useSelector((state) => state.ui);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getTypes());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(removeMsg());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(removeLoading());\r\n  }, [dispatch]);\r\n\r\n  const [input, setInput] = useState({\r\n    name: \"\",\r\n    hp: 0,\r\n    attack: 0,\r\n    defense: 0,\r\n    speed: 0,\r\n    height: 0,\r\n    weight: 0,\r\n    types: [],\r\n    img: \"\",\r\n  });\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    if (\r\n      target.name === \"attack\" ||\r\n      target.name === \"hp\" ||\r\n      target.name === \"defense\" ||\r\n      target.name === \"speed\" ||\r\n      target.name === \"height\" ||\r\n      target.name === \"weight\"\r\n    ) {\r\n      setInput({\r\n        ...input,\r\n        [target.name]: Number(target.value),\r\n      });\r\n    } else {\r\n      setInput({\r\n        ...input,\r\n        [target.name]: target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSelect = ({ target }) => {\r\n    setInput({\r\n      ...input,\r\n      types: [...input.types, target.value],\r\n    });\r\n  };\r\n\r\n  const handleDeleteType = (type) => {\r\n    setInput({\r\n      ...input,\r\n      types: input.types.filter((pokemonType) => pokemonType !== type),\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors({});\r\n    const formInvalid = validation(input);\r\n    if (!formInvalid.valido) {\r\n      return setErrors(formInvalid.errors);\r\n    } else {\r\n      dispatch(createPokemon(input));\r\n      localStorage.clear();\r\n      setInput({\r\n        name: \"\",\r\n        hp: 0,\r\n        attack: 0,\r\n        defense: 0,\r\n        speed: 0,\r\n        height: 0,\r\n        weight: 0,\r\n        types: [],\r\n        img: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"formulario\">\r\n      <button className=\"btn-volver\">\r\n        <NavLink to=\"/home\">Back</NavLink>\r\n      </button>\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <div className=\"form-group\">\r\n            <h3 className=\"title-new-pokemon\">New Pokemon</h3>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Name</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n              name=\"name\"\r\n              onChange={handleInputChange}\r\n              value={input.name}\r\n            />\r\n            {errors.name && <span className=\"input-errors\">{errors.name}</span>}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Hp</label>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"HP\"\r\n              name=\"hp\"\r\n              onChange={handleInputChange}\r\n              value={input.hp}\r\n            />\r\n            {errors.hp && <span className=\"input-errors\">{errors.hp}</span>}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Attack</label>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Attack\"\r\n              name=\"attack\"\r\n              onChange={handleInputChange}\r\n              value={input.attack}\r\n            />\r\n            {errors.attack && (\r\n              <span className=\"input-errors\">{errors.attack}</span>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Defense</label>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Defense\"\r\n              name=\"defense\"\r\n              onChange={handleInputChange}\r\n              value={input.defense}\r\n            />\r\n            {errors.defense && (\r\n              <span className=\"input-errors\">{errors.defense}</span>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Speed</label>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Speed\"\r\n              name=\"speed\"\r\n              onChange={handleInputChange}\r\n              value={input.speed}\r\n            />\r\n            {errors.speed && (\r\n              <span className=\"input-errors\">{errors.speed}</span>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Height</label>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Height\"\r\n              name=\"height\"\r\n              onChange={handleInputChange}\r\n              value={input.height}\r\n            />\r\n            {errors.height && (\r\n              <span className=\"input-errors\">{errors.height}</span>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Weight</label>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Weight\"\r\n              name=\"weight\"\r\n              value={input.weight}\r\n              onChange={handleInputChange}\r\n            />\r\n            {errors.weight && (\r\n              <span className=\"input-errors\">{errors.weight}</span>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Types</label>\r\n            <select onChange={(e) => handleSelect(e)}>\r\n              <option value=\"\" hidden name=\"types\">\r\n                Select Type\r\n              </option>\r\n              {typesPokemons.map((type) => (\r\n                <option value={type.name} key={type.id}>\r\n                  {type.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {errors.types && (\r\n              <span className=\"input-errors\">{errors.types}</span>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <p className=\"msg-tipos-seleccionados\">\r\n              {input.types.length !== 0 && \"Tipos Seleccionados:\"}\r\n            </p>\r\n            {input.types.map((typeP) => (\r\n              <div key={typeP} className=\"tipos-seleccionados\">\r\n                <h5>\r\n                  {\r\n                    typesPokemons.find((typePoke) => typePoke.name === typeP)\r\n                      ?.name\r\n                  }\r\n                </h5>\r\n\r\n                <span onClick={() => handleDeleteType(typeP)}>X</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Img</label>\r\n            <input\r\n              type=\"url\"\r\n              placeholder=\"Img\"\r\n              name=\"img\"\r\n              onChange={handleInputChange}\r\n              value={input.img}\r\n            />\r\n            {errors.img && <span className=\"input-errors\">{errors.img}</span>}\r\n          </div>\r\n          <button type=\"submit\">Add Pokemon</button>\r\n          {msgError && <span className=\"error-new-pokemon\">{msgError}</span>}\r\n          {msg && <span className=\"msg-new-pokemon\">{msg}</span>}\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","export const validation = (input) => {\r\n   let results = {\r\n      errors: {},\r\n      valido: true\r\n   }\r\n   if (!input.name || typeof input.name !== 'string') {\r\n      results.errors.name = \"Name is Required\"\r\n      results.valido = false\r\n   } else if (!input.hp || input.hp > 250 || input.hp < 1 || typeof input.hp !== 'number') {\r\n      results.errors.hp = 'Hp is invalid'\r\n      results.valido = false\r\n   } else if (!input.attack || input.attack > 250 || input.attack < 1 || typeof input.attack !== 'number') {\r\n      results.errors.attack = 'attack is invalid'\r\n      results.valido = false\r\n   } else if (!input.defense || input.defense > 250 || input.defense < 1 || typeof input.defense !== 'number') {\r\n      results.errors.defense = 'Defense is invalid'\r\n      results.valido = false\r\n   } else if (!input.speed || input.speed > 250 || input.speed < 1 || typeof input.speed !== 'number') {\r\n      results.errors.speed = 'Speed is invalid'\r\n      results.valido = false\r\n   } else if (!input.height || input.height > 250 || input.height < 1 || typeof input.height !== 'number') {\r\n      results.errors.height = 'Height is invalid'\r\n      results.valido = false\r\n   } else if (!input.weight || input.weight > 250 || input.weight < 1 || typeof input.weight !== 'number') {\r\n      results.errors.weight = 'Weight is invalid'\r\n      results.valido = false\r\n   } else if (!input.types.length) {\r\n      results.errors.types = 'Select from 1 to 3 types'\r\n      results.valido = false\r\n   }\r\n\r\n   return results;\r\n}","import React from 'react';\r\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom';\r\nimport { HomeScreen } from '../pages/home/HomeScreen'\r\nimport { Pokemon } from '../pages/pokemon/Pokemon';\r\nimport { WelcomeScreen } from '../pages/welcome/WelcomeScreen'\r\nimport { NuevoPokemon } from '../pages/nuevoPokemon/NuevoPokemon';\r\n\r\nexport const AppRouter = () => {\r\n  return (\r\n    <HashRouter>\r\n      <div>\r\n\r\n\r\n        <Switch>\r\n          <Route exact path='/' component={WelcomeScreen} />\r\n          <Route exact path='/home' component={HomeScreen} />\r\n          <Route exact path='/nuevo' component={NuevoPokemon} />\r\n          <Route exact path='/pokemon/:id' component={Pokemon} />\r\n          <Redirect to='/' />\r\n        </Switch>\r\n      </div>\r\n    </HashRouter>\r\n  )\r\n}\r\n","import React from 'react';\nimport {Provider} from 'react-redux'\nimport {store} from './store/store';\nimport { AppRouter } from './router/AppRouter';\n\nexport const App = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}